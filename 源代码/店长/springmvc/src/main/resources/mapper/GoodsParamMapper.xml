<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.springmvc.dao.GoodsParamMapper" >
  <resultMap id="BaseResultMap" type="cn.springmvc.model.GoodsParam" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="GOODS_ID" property="goodsId" jdbcType="INTEGER" />
    <result column="LACK_THRESHOLD" property="lackThreshold" jdbcType="INTEGER" />
    <result column="BACKLOG_THRESHOLD" property="backlogThreshold" jdbcType="INTEGER" />
    <result column="COUNT" property="count" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, GOODS_ID, LACK_THRESHOLD, BACKLOG_THRESHOLD, COUNT, CREATE_TIME, MODIFY_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tgoodsparam
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tgoodsparam
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.springmvc.model.GoodsParam" >
    insert into tgoodsparam (ID, GOODS_ID, LACK_THRESHOLD, 
      BACKLOG_THRESHOLD, COUNT, CREATE_TIME, 
      MODIFY_TIME)
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{lackThreshold,jdbcType=INTEGER}, 
      #{backlogThreshold,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.springmvc.model.GoodsParam" >
    insert into tgoodsparam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="goodsId != null" >
        GOODS_ID,
      </if>
      <if test="lackThreshold != null" >
        LACK_THRESHOLD,
      </if>
      <if test="backlogThreshold != null" >
        BACKLOG_THRESHOLD,
      </if>
      <if test="count != null" >
        COUNT,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="lackThreshold != null" >
        #{lackThreshold,jdbcType=INTEGER},
      </if>
      <if test="backlogThreshold != null" >
        #{backlogThreshold,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvc.model.GoodsParam" >
    update tgoodsparam
    <set >
      <if test="goodsId != null" >
        GOODS_ID = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="lackThreshold != null" >
        LACK_THRESHOLD = #{lackThreshold,jdbcType=INTEGER},
      </if>
      <if test="backlogThreshold != null" >
        BACKLOG_THRESHOLD = #{backlogThreshold,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        COUNT = #{count,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springmvc.model.GoodsParam" >
    update tgoodsparam
    set GOODS_ID = #{goodsId,jdbcType=INTEGER},
      LACK_THRESHOLD = #{lackThreshold,jdbcType=INTEGER},
      BACKLOG_THRESHOLD = #{backlogThreshold,jdbcType=INTEGER},
      COUNT = #{count,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>